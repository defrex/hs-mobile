<project name="PhoneGap BlackBerry Ant Build" default="build">
	<taskdef resource="bb-ant-defs.xml" />
	<!-- PROPERTY DEFINITION - FILL THESE OUT! -->
	<!-- rapc and sigtool require the jde.home property to be set -->
	<property name="jde.home" location="C:\eclipse-blackberry\plugins\net.rim.eide.componentpack4.6.1_4.6.1.27\components" />
	<!-- directory of simulator to copy files to -->
	<property name="simulator.home" location="${jde.home}\simulator\" />
	<!-- directory of MDS-CS to allow XHR in the simulator -->
	<property name="mds.home" location="${jde.home}\MDS\" />
	<!-- directory of your phonegap assets (HTML/CSS/JS) - PhoneGap convention is to keep in a folder called 'www'. -->
	<!-- defaults to the stock application located under the 'example' dir -->
	<property name="www.dir" location="example" />
	<!-- directory where you want the final binaries to be copied to. -->
	<property name="build.dir" location="build" />
	<!-- name of the binaries to generate (i.e. <blah>.cod, <blah>.jar, etc.) -->
	<property name="cod.name" value="PhoneGap_Sample" />
	<!-- password for the Signature Tool -->
	<property name="password" value="some_password" />
	<!-- package name - used by the alx task to build the .alx file for desktop-based app loading -->
	<property name="package.name" value="com.test.example" />
	<!-- name of the application, as it appears in the BlackBerry menu -->
	<property name="application.name" value="PhoneGap Sample" />
 
 	<target name="build" depends="clean, buildjavascript">
		<!-- Create build/www directories, copy over www assets and freshly-built phonegap.js -->
		<mkdir dir="${build.dir}" />
		<mkdir dir="www" />
		<copy todir="www" overwrite="true">
			<fileset dir="${www.dir}" />
			<!-- copy build phonegap.js -->
			<fileset file="phonegap.js" />
		</copy>
		<!-- we have to do some replacement magic in PhoneGap.java, so that we create a unique key based on the app name. This is important for the BlackBerry-specific offline storage -->
		<replace file="src/com/nitobi/phonegap/PhoneGap.java" token="%PLACEHOLDER%" value="${application.name}"/>
		<!-- Calls the RIM compiler -->
		<rapc output="${cod.name}" generatesourcelist="true">
			<src>
				<!-- for source to include, just the src folder which includes PhoneGap, and the www dir that the user specified. -->
	      		<fileset dir="src" />
	      		<fileset dir="www" />
			</src>
			<jdp title="${application.name}" />
		</rapc>
 		<copy todir="${build.dir}">
 			<fileset dir="" includes="*.cod,*.cso,*.debug,*.jad,*.jar,*.csl,*.rapc" />
 		</copy>
		<!-- clean up leftover files -->
 		<delete file="${cod.name}.cod" />
 		<delete file="${cod.name}.cso" />
 		<delete file="${cod.name}.debug" />
 		<delete file="${cod.name}.jad" />
 		<delete file="${cod.name}.jar" />
		<delete dir="www" />
		<delete file="phonegap.js" />
		<!-- finally, re-replace the token in PhoneGap.java with the Placeholder text, so that future calls to build will work properly! -->
		<replace file="src/com/nitobi/phonegap/PhoneGap.java" token="${application.name}" value="%PLACEHOLDER%"/>
	</target>
 
	<target name="sign" depends="build">
		<sigtool codfile="${build.dir}/${cod.name}.cod" password="${password}" />
	</target>
	<target name="alx" depends="build">
		<alx destdir="${build.dir}" filename="${cod.name}.alx">
			<application id="${package.name}" name="${application.name}">
				<codset>
					<fileset dir="${build.dir}" includes="*.cod" />
				</codset>
			</application>
		</alx>
   </target>
	<target name="clean">
		<delete dir="${build.dir}" />
   	</target>
 
	<target name="buildjavascript">
		<concat destfile="phonegap.js" append="true">
			<fileset dir="../js/">
				<include name="*.js" />
			</fileset>
		</concat>
	</target>
 
	<target name="load-simulator" depends="sign">
		<copy todir="${simulator.home}">
			<fileset dir="${build.dir}" includes="*.cod,*.cso,*.debug,*.jad,*.jar,*.csl,*.rapc" />
		</copy>
		<exec executable="${mds.home}/run.bat" dir="${mds.home}" spawn="true"></exec>
		<exec executable="${simulator.home}/defaultSimulator.bat" dir="${simulator.home}" spawn="true"></exec>
	</target>
	<target name="load-device" depends="sign">
		<exec executable="${jde.home}/bin/JavaLoader.exe" dir="." failonerror="true">
			<arg value="-u" />
			<arg value="load" />
			<arg value="${build.dir}/${cod.name}.cod" />
		</exec>
	</target>
</project>